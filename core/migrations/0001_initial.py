# Generated by Django 2.2.4 on 2019-08-11 05:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('duration', models.PositiveIntegerField(default=1)),
                ('url', models.URLField(blank=True, max_length=250, null=True)),
                ('songfile', models.FileField(upload_to='songs/')),
                ('likes', models.PositiveIntegerField(default=0)),
                ('dilikes', models.PositiveIntegerField(default=0)),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Artist')),
                ('colabs', models.ManyToManyField(related_name='colabs', to='core.Artist')),
                ('genres', models.ManyToManyField(to='core.Genre')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('songs', models.ManyToManyField(to='core.Song')),
            ],
            options={
                'managed': True,
            },
        ),
    ]
